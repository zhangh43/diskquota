-- Test schema
CREATE SCHEMA s1;
SELECT diskquota.set_schema_quota('s1', '1 MB');
 set_schema_quota 
------------------
 
(1 row)

SET search_path TO s1;
CREATE TABLE a(i int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
INSERT INTO a SELECT generate_series(1,100);
-- expect insert fail
INSERT INTO a SELECT generate_series(1,100000000);
ERROR:  schema's disk space quota exceeded with name:s1
-- expect insert fail
INSERT INTO a SELECT generate_series(1,100);
ERROR:  schema's disk space quota exceeded with name:s1
CREATE TABLE a2(i int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
-- expect insert fail
INSERT INTO a2 SELECT generate_series(1,100);
ERROR:  schema's disk space quota exceeded with name:s1
-- Test alter table set schema
CREATE SCHEMA s2;
ALTER TABLE s1.a SET SCHEMA s2;
SELECT pg_sleep(20);
 pg_sleep 
----------
 
(1 row)

-- expect insert succeed
INSERT INTO a2 SELECT generate_series(1,200);
-- expect insert succeed
INSERT INTO s2.a SELECT generate_series(1,200);
ALTER TABLE s2.a SET SCHEMA badquota;
-- expect failed
INSERT INTO badquota.a SELECT generate_series(0, 100);
ERROR:  schema's disk space quota exceeded with name:badquota
SELECT schema_name, quota_in_mb FROM diskquota.show_schema_quota_view WHERE schema_name = 's1';
 schema_name | quota_in_mb 
-------------+-------------
 s1          |           1
(1 row)

RESET search_path;
DROP TABLE s1.a2, badquota.a;
DROP SCHEMA s1, s2;
